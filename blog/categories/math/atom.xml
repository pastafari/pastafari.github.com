<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Math | Notes to self]]></title>
  <link href="http://pastafari.github.com/blog/categories/math/atom.xml" rel="self"/>
  <link href="http://pastafari.github.com/"/>
  <updated>2012-07-31T00:08:35+05:30</updated>
  <id>http://pastafari.github.com/</id>
  <author>
    <name><![CDATA[Mohit Thatte]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[The shapes of numbers]]></title>
    <link href="http://pastafari.github.com/blog/2012/05/17/the-shapes-of-numbers/"/>
    <updated>2012-05-17T11:23:00+05:30</updated>
    <id>http://pastafari.github.com/blog/2012/05/17/the-shapes-of-numbers</id>
    <content type="html"><![CDATA[<p>I am planning to re-start reading
<a href="http://mitpress.mit.edu/sicp/full-text/book/book.html">SICP</a>, so I
was looking around for some online course structure that I could
follow. I found that UC Berkeley offers a course
<a href="http://www-inst.eecs.berkeley.edu/~cs61a/sp12/">CS 61A</a> titled SICP which uses Python
as the language of instruction rather than Scheme. I was going through
the course page and found a rather interesting homework problem</p>

<blockquote><p>Q4. <a href="http://en.wikipedia.org/wiki/Douglas_Hofstadter">Douglas Hofstadter’s</a> Pulitzer-prize-winning book, <a href="http://en.wikipedia.org/wiki/G%C3%B6del,_Escher,_Bach">Gödel, Escher, Bach</a>, poses the following mathematical puzzle.</p>

<p>Pick a positive number n <br/>
If n is even, divide it by 2. <br/>
If n is odd, multipy it by 3 and add 1. <br/>
Continue this process until n is 1. <br/>
The number n will travel up and down but eventually end at 1 (at
least for all numbers that have ever been tried -- nobody has ever
proved that the sequence will always terminate).</p>

<p>The sequence of values of n is often called a Hailstone sequence,
because hailstones also travel up and down in the atmosphere before
falling to earth. Write a function ...</p></blockquote>

<p>I have always been fascinated by the shapes generated by equations, so
I wanted to 'see' this <code>hailstone</code> shape for myself. I wrote a
little <code>Ruby</code> script to generate a hailstone sequence.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">hailstone</span><span class="p">(</span><span class="n">n</span><span class="p">)</span>
</span><span class='line'>  <span class="n">sequence</span> <span class="o">=</span> <span class="o">[]</span>
</span><span class='line'>  <span class="k">until</span> <span class="n">n</span> <span class="o">==</span> <span class="mi">1</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;pre&gt;&lt;code&gt;n = n.even? ? n/</span><span class="mi">2</span> <span class="p">:</span> <span class="n">n</span><span class="o">*</span><span class="mi">3</span> <span class="o">+</span> <span class="mi">1</span>
</span><span class='line'><span class="n">sequence</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span> <span class="n">n</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/code&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="k">end</span>
</span><span class='line'>  <span class="n">sequence</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>I generated the sequence for the first 100 numbers.</p>

<p>I then used the <code>Grapher</code> utility on the Mac to plot the resulting series. I found
that the shape was like a sawtooth curve, oscillating up and down for
a while before gracefully dying down to 1. This behavior was
pronounced for odd and prime numbers more than even numbers (which
tend to damp down quicker). Here's a picture (click image to enlarge) of the <code>hailstone series</code>
for 11, 59 and 89 (<em>all odd and prime by choice</em>):</p>

<p><img src="/images/hailstones.jpg" alt="Hailstone series" /></p>

<p>Further reading: <br/>
 &rarr; <a href="http://www.nssl.noaa.gov/primer/hail/hail_basics.html">How are hailstone's formed?</a> <br/>
 &rarr; <a href="http://xkcd.com/917/">XKCD on Hofstadter</a></p>
]]></content>
  </entry>
  
</feed>
